package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22-dev

import (
	"context"
	"fmt"

	"github.com/99designs/gqlgen/plugin/federation/testdata/federatedentityresolver/generated"
	"github.com/99designs/gqlgen/plugin/federation/testdata/federatedentityresolver/gqlmodels"
)

// FindManyExternalExtensionByUpcs is the resolver for the findManyExternalExtensionByUpcs field.
func (r *entityResolver) FindManyExternalExtensionByUpcs(ctx context.Context, reps []gqlmodels.ExternalExtensionByUpcsInput) ([]*gqlmodels.ExternalExtension, error) {
	panic(fmt.Errorf("not implemented: FindManyExternalExtensionByUpcs - findManyExternalExtensionByUpcs"))
}

// FindHelloByName is the resolver for the findHelloByName field.
func (r *entityResolver) FindHelloByName(ctx context.Context, name string) (*gqlmodels.Hello, error) {
	panic(fmt.Errorf("not implemented: FindHelloByName - findHelloByName"))
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
